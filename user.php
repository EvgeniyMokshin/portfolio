<?php

namespace class_server\user;
use pdo;
require_once 'pattern\registry.php';

class user
{
    /*****************************************************************************************************************
     *                                                   свойства
     **************************************************************************************************************** */
    protected string $id_user;
    protected string $name_user;
    protected string $cache_user;
    public string $status_user;
    /*****************************************************************************************************************
     *                                                   константы
     **************************************************************************************************************** */
    protected const DATA_B='mysql';
    protected const LOCALHOST='html_realtor_client';
    protected const DATABASES='html_realtor_client';
    protected const NAME_USER='root';
    protected const PASS='';
    /*****************************************************************************************************************
     *                                                   функции класса
     **************************************************************************************************************** */

    /*****************************************************************************************************************
     * функція определяет что за пользователь перед нами,если гость то false, если же вернет статус 'client'-то гость ,
     * если же 'realtor'-то реэлтер
     *****************************************************************************************************************/
    public function handler_user($id,$name)
    {
        if ($id and $name) {
            $pdo = new PDO('DATA_B:LOCALHOST;DATABASES', 'NAME_USER', 'PASS');
            $stm = $pdo->query("use html_realtor_client");
            $stm->execute();
            $stm = $pdo->prepare("SELECT id,name,status,cache FROM handler_user WHERE id=? and name=?");
            $stm->execute([$_COOKIE['id'], $_COOKIE['userName']]);
            $array = $stm->fetch(PDO::FETCH_ASSOC);
            if ($array['id'] and $array['name'] and $array['status'] and $array['cache']) {
                $this->id_user = $array['id'];
                $this->name_user = $array['name'];
                $this->status_user = $array['status'];
                $this->cache_user = $array['cache'];
                $_SESSION['id'] = $id;
                $_SESSION['userName'] = $name;
                return $this->status_user;
            }
            return false;
        }
    }
        /*****************************************************************************************************************
     * функция показывает содержимое страницы для пользователя-гостя
     *****************************************************************************************************************/
    public function handler_viewing_guest(){

    }
    /*****************************************************************************************************************
     * функция показывает содержимое страницы для пользователя-риэлтора
     *****************************************************************************************************************/
    public function handler_viewing_realtor(){

    }
    /*****************************************************************************************************************
     * функция показывает содержимое страницы для пользователя-клиента,в отличии от гостя клиент может оставлять комментарии
     *****************************************************************************************************************/
    public function handler_viewing_client(){

    }
    /*****************************************************************************************************************
     * функция удаляющяя инф из базы данных
     *****************************************************************************************************************/
    public function delete_user(){

    }
    /*****************************************************************************************************************
     * функция добавляющяя в базу данных пользователя
     *****************************************************************************************************************/
    public function additions_user(){

    }
    /*****************************************************************************************************************
     * функция изменяющия данные о пользователя
     *****************************************************************************************************************/
    public function update_user(){

    }

    }